day5


1 : 숙제점검
2 : 
#배열
얕은 복사 :
 동일한 메모리(주소) 사용 => 원본과 복사본 각자 수정시 서로에게 영향을 미침

깊은 복사 :
 - clone메소드 사용
 - System.arraycopy() 사용
 - arraycopy(원본배열, 원복배열에서 복사를 시작하는 위치의 인덱스, 복사된 배열을 받을 배열, 복사된 배열에서 값을 넣을 위치의 인덱스, 복사할 배열의 길이)

 - 향상된 for문

3 : 
로또
 -  
메소드 : .length 같은 메소드를 내가 직접 설정하고 사용할 수 있음.
 - 설계도(class)의 부품을 담당하는 것 method 
 - 접근제어자(호출범위지정) 리턴타입 메소드명(소문자로설정)(매개변수(타입설정))
	예 : A패키지 to B패키지
 - return 결과 값으로 나온다.

4:
다양한 리턴타입
매개변수 개념정리완료

5:
 - 웹을 구성하는 메소드(로그인, 회원가입, 회원탈퇴, 회원정보 수정, 비밀번호 등등)들,
그것들이 어떻게 만들어지는지 배우고 있다.
 
매개변수 :
 - 매개변수는 타입과 개수에 제한이 없다. 그렇지만 사용할 때 (타입,순서,갯수) 꼭 맞춰 사용해야함.
 - void 형태에서는 return을 사용할 수 없다.
 - return문은 결과 값을 반환하는 의미도 있지만 메소드의 종결을 의미하기도 한다.
 - reutrn문 뒤에 코드는 실행되지 않는다.
 
 메소드 형태 - 🛠️[ 접근제어자 리턴타입 메소드명(매개변수) {기능처리 return 구문; } ]
 괄호가 생략 된 식 - public int mod(int a, int b) { if(b == 0)  return 0; return a / b; }

6: 메소드 만들기 시간
//기능구현 괄호에 조건식 중첩도 쌉가능
//변수를 몇개 만들어야할지 감을 못잡는듯 함.
//기능구현 칸에 조건문을 넣을 수 있다. 리턴타입 배열이라 return칸에 배열타입의 변수lotto를 넣었다.
⭐배열, 제어문 등등 '형식(구조)' '바로' 떠올릴 수 있도록 연습하기

7:
오버로딩
 - 같은 이름이지만 매개변수 수정 
오버라이딩(상속개념)
 - 부모 클래스와 똑같은 모양으로 정의해야 함.

⭐개념파악 후 응용능력이 매우매우매우 요구되는 분야임. 응용을 위해선 분명한 개념파악이 필요함.





* 1000이하의 자연수 중에서 2의 배수이면서 7의 배수인 숫자를 출력하고, 
그 출력된 숫자들의 합을 구하는 프로그램을 작성하세요.
* 총 합을 구할 땐 합을 받아 줄 변수가 필요하다.

눈여겨 볼 문제 :
 - Middle 5번 문제

Math.random(); -
이 메소드 랜덤 범위 초기설정은 0 <= a < 1 이다.
